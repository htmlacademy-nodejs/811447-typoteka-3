doctype html
html(lang='ru')
  head
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width,initial-scale=1')
    meta(name='description' content='Личный блог Типотека')
    meta(http-equiv='X-UA-Compatible' content='ie=edge')
    title Типотека
    link(rel='preload' href='/fonts/Inter-Regular.woff2' as='font' crossorigin='anonymous')
    link(rel='preload' href='/fonts/Inter-Medium.woff2' as='font' crossorigin='anonymous')
    link(rel='preload' href='/fonts/SFProDisplay-Regular.woff2' as='font' crossorigin='anonymous')
    link(rel='stylesheet' href='/css/style.min.css')
  body
    mixin pagination(page, totalPages, width, prefix)
      -
        let start = page - width;
        let end = page + width;
        if(start < 1){
          end += 1 - start;
          start = 1;
        }
        if(end > totalPages){
          start -= end - totalPages;
          end = totalPages;
        }
        if(start < 1){
          start = 1;
        }
        let i = start - 1
      .preview__toggle-wrapper
        ul.preview__pagination.pagination
          if start > 1
            li
              a.pagination__button.button.button--backwards.button--disabled(href=`${prefix}page=${page - 1}`) Назад
          while i++ < end
            li.pagination__item(class={'pagination__item--active': i === page})
              a(class={active: i === page} href=`${prefix}page=${i}`)= i
          if end < totalPages
            li
              a.pagination__button.button.button--forward(href=`${prefix}page=${page + 1}`) Вперёд
    style.
      a.active{
        pointer-events: none;
      }

    mixin errorMessage(message)
      if message
        .server-error= message
    style.
      .server-error{
        border-radius: 10px;
        color: white;
        background-color: tomato;
        margin: 20px 0;
        padding: 10px;
      }

    -
      const formatDate = (dateString) => {
        const date = new Date(dateString);
        return date.toLocaleString().slice(0, -3);
      }

    -
      const formatShortDate = (dateString) => {
        const date = new Date(dateString);
        return date.toLocaleString().slice(0, 10);
      }

    -
      const truncateText = (text) => {
        const shortText = text.length < 101 ? text : `${text.slice(0, 100)}...`;
        return shortText;
      }

    .wrapper
      include partials/header.pug
      block content
      include partials/footer.pug
    script(src='/js/vendor.js')
    script(src='/js/main.js')
